(*
RReset {
    #>printf("User reset\n");<#
    pend task2;
    pend task3;
    #>RTFM_SLEEP(SEC(1));<#
    pend task1;
}

Task task1 1 {
    #>printf("task1\n");<#
    claim R {
        #>printf("task1 R claimed\n");<#
    }
}

// use DEBUG to see that also synchronous chains are tracked
Func void fun(int i) {
    claim R {
        #>
        printf("task%d R claimed\n", i);
        RTFM_SLEEP(SEC(5));
        printf("task%d R released\n", i);
        <#
    }   
}

Task task2 1 {
    #>printf("task2\n");<#
    sync fun(2);
}

Task task3 1 {
    #>printf("task3\n");<#
    sync fun(3);
}
*)


class R<> {
    void fun(int i) {
    }
     
    Task task1 1 {
    }
}

class Root<> { 
    R<> r;

    Task task2 1 {
        r.fun(2);
    }

    Task task3 1 {
        r.fun(3);
    }
    
    Reset {
        Pend task2;
        Pend task3;
        Pend task1;
    } 
}