// CEx4.coore
// Per Lindgren (C) 2014
//
// Static communication (callback) structure
class R<int ri> {
    void fun(int i) {
        RT_printf("task%d R claimed : R.ri = %d\n", i, ri);
        RT_sleep(5);
        RT_printf("task%d R released\n", i);        
    }
     
    Task rt () {
        RT_printf("task rt R.ri = %d \n", ri);
    } 
}

class T<int i, void (int) fun> {
    Task tt () {
        ri := 8;
        RT_printf("task%d\n", i);
        fun(i);
    }
}

class Root<> { 
    R<10> r;
    T<2, r.fun> t2;
    T<3, r.fun> t3;
    
    Reset {
        async t2.tt(); // task2
        async t3.tt(); // task3
        async after 1s r.rt();
    } 
}