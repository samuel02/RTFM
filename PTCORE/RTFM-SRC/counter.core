// RTFM-cOOre, Per Lindgren (C) 2014
// RTFM-cOOre : generating include for Root:Root
include "Websocket.core" as Root


// RTFM-cOOre : generating include for Sequence:Root_sequence






// RTFM-cOOre : generating include for Timer:Root_timer






#>
// RTFM-cOOre : generating RTFM-core code for Root:Root
// RTFM-cOOre : method prototypes for Root:Root
// RTFM-cOOre : class instance parameters for Root:Root

// RTFM-cOOre : class instance variables for Root:Root









// RTFM-cOOre : generating RTFM-core code for Sequence:Root_sequence
// RTFM-cOOre : method prototypes for Sequence:Root_sequence
// RTFM-cOOre : class instance parameters for Sequence:Root_sequence

// RTFM-cOOre : class instance variables for Sequence:Root_sequence
char Root_sequence_correct[15] = {'4', ' ', '8', ' ', '1', '5', ' ', '1', '6', ' ', '2', '3', ' ', '4', '2'};
int Root_sequence_string_length = 15;
int Root_sequence_cursor = 0;








// RTFM-cOOre : methods declarations for Sequence:Root_sequence



<# Func void Root_sequence_handle_input_local (char Root_sequence_input) {#>
		if ( Root_sequence_input == Root_sequence_correct[Root_sequence_cursor] ) {			Root_sequence_cursor = Root_sequence_cursor + 1;
}
<# } #>

<# Func void Root_sequence_handle_input (char Root_sequence_input) {
	claim RES_Root_sequence_ { #>
		if ( Root_sequence_input == Root_sequence_correct[Root_sequence_cursor] ) {			Root_sequence_cursor = Root_sequence_cursor + 1;
}
	<# } #>
<# } #>
<# Func bool Root_sequence_is_complete_local () {#>
		return Root_sequence_cursor == Root_sequence_string_length;
<# } #>

<# Func bool Root_sequence_is_complete () {#>
		return Root_sequence_cursor == Root_sequence_string_length;
<# } #>


<# Func void Root_sequence_reset_local () {#>
		Root_sequence_cursor = 0;
<# } #>

<# Func void Root_sequence_reset () {
	claim RES_Root_sequence_ { #>
		Root_sequence_cursor = 0;
	<# } #>
<# } #>

// RTFM-cOOre : generating RTFM-core code for Timer:Root_timer
// RTFM-cOOre : method prototypes for Timer:Root_timer
// RTFM-cOOre : class instance parameters for Timer:Root_timer
const int Root_timer_secs = 108;<# Func void Root_timer_handle_output (int i2)  { sync Root_ws_send (i2) ; } #><# Func void Root_timer_handle_output_local (int i1)  { sync Root_ws_send (i1) ; } #>
// RTFM-cOOre : class instance variables for Timer:Root_timer
int Root_timer_seconds = Root_timer_secs;




// RTFM-cOOre : methods declarations for Timer:Root_timer

<# Task Root_timer_tick ()  { 
	claim RES_Root_timer_ { #>
		Root_timer_seconds = Root_timer_seconds - 1;
		<#sync Root_timer_handle_output_local (Root_timer_seconds) ;#>;
		if ( Root_timer_seconds >= 0 ) {			<# async after 1s Root_timer_tick () ; #>;
}
	<# } #>
<# } #>
<# Func void Root_timer_reset_local () {#>
		Root_timer_seconds = Root_timer_secs;
<# } #>

<# Func void Root_timer_reset () {
	claim RES_Root_timer_ { #>
		Root_timer_seconds = Root_timer_secs;
	<# } #>
<# } #>



// RTFM-cOOre : methods declarations for Root:Root
// extern prototype: ws_send
// extern prototype: idle_websocket


<# Task Root_client_receive (char Root_msg)  { 
	claim RES_Root_ { #>
		<#sync Root_sequence_handle_input (Root_msg) ;#>;
		bool Root_is_complete = <#sync Root_sequence_is_complete () ;#>;
		if ( Root_is_complete ) {					<#sync Root_sequence_reset () ;#>;
				<#sync Root_timer_reset () ;#>;

}
	<# } #>
<# } #>
<# Reset {
	claim RES_Root_ { #>
		RT_printf("Reset!\n");
	<# } #>
<# } #>
<# Idle {#>
		<# async Root_timer_tick () ; #>;
		<#sync Root_idle_websocket_local () ;#>;
<# } #>

<#

