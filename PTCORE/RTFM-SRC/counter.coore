class IO<> {

	void print(int seconds) {
		RT_printf("%d", seconds);
	}
}

class Sequence<> {
	string correct := "4 8 15 16 23 42";
	int sequence_cursor := 0;

	void increment_sequence_cursor() {
		sequence_cursor := sequence_cursor + 1;
	}

	bool is_correct_char(char c) {
		return c == correct[sequence_cursor];
	}

	bool is_complete() {
		return sequence_cursor == 15;
	}

	Task reset() {
		sequence_cursor := 0;
	}
}


class Timer<> {
	int seconds := 8;
	IO<> output;

	Task tick () {
		seconds := seconds-1;
		output.print(seconds);

		if (seconds) {
			async after 1 s tick();
		} else {
			RT_printf("System failure!!\n");
		}
	}

	Task reset () {
		seconds := 8;
	}
}


class Root<> {
	Sequence<> seq;
	Timer<> timer;

	Reset {
		async after 1 s timer.tick();
	}

	Idle {
		char c := ' ';
		bool running := true;

		while(running) {
			c := RT_getc();

			if(c) {
				bool is_correct_char := seq.is_correct_char(c);
				if(is_correct_char) {
					seq.increment_sequence_cursor();
				}

				bool is_complete := seq.is_complete();
				if(is_complete) {
					async timer.reset();
					async seq.reset();
				}

				if(c == 'q') {
				  running := 0;
				}
			}
		}
	}
}
