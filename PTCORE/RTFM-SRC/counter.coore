class IO<void (string) handle_input> extern "websocket.core" {

	void print(int seconds) {
		ws_send(seconds);
	}

	Task client_receive(string msg) {
		handle_input(msg);
	}

	Task reset() {
		async idle_websocket();
	}
}

class Sequence<> {
	string correct := "4 8 15 16 23 42";
	int cursor := 0;

	void increment_cursor() {
		cursor := cursor + 1;
	}

	bool is_correct_char(char c) {
		return c == correct[cursor];
	}

	bool is_complete() {
		return cursor == 15;
	}

	Task reset() {
		cursor := 0;
	}
}


class Timer<void (int) handle_output> {
	int seconds := 8;

	Task tick () {
		seconds := seconds - 1;
		handle_output(seconds);

		if (seconds) {
			async after 1 s tick();
		} else {
			RT_printf("System failure!!\n");
		}
	}

	Task reset () {
		seconds := 8;
	}
}


class Root<> {
	Sequence<> sequence;
	IO<handle_output> io;
	Timer<io.print> timer;

	void reset() {
		async sequence.reset();
		async timer.reset();
		async io.reset();
	}

	void handle_input(char input) {
		bool is_correct_char := sequence.is_correct_char(input);
		if (is_correct_char) sequence.increment_cursor();

		bool is_complete := sequence.is_complete();
		if(is_complete) reset();
	}

	Reset {
		reset();
		async after 1 s timer.tick();
	}
}
