class IO<void (char) handle_input> extern "websocket3.core" {

	void print(int seconds) {
		RT_printf("%d\n", seconds);
		ws_send(seconds);
	}

	void setup() {
		RT_printf("Starting websocket...");
		//async idle_websocket();
	}

	Task client_receive(char msg) {
	 	handle_input(msg);
	}
}

class Sequence<> {
	string correct := "4 8 15 16 23 42";
	int cursor := 0;

	void handle_input(char input) {
		bool is_correct_char := is_correct_char(input);
		if (is_correct_char) increment_cursor();

		bool is_complete := is_complete();
		if(is_complete) cursor := 0;
	}

	void increment_cursor() {
		cursor := cursor + 1;
	}

	bool is_correct_char(char c) {
		return c == correct[cursor];
	}

	bool is_complete() {
		return cursor == 15;
	}
}

class Timer<int secs, void (char) handle_output, bool () is_complete> {
 int seconds := secs;

	Task tick () {
		bool is_complete := is_complete();
		if(is_complete) seconds := 8;

		seconds := seconds - 1;
		handle_output(seconds);

		if (seconds) {
			async after 1 s tick();
		} else {
			RT_printf("System failure!!\n");
		}
	}
}

class Root<> {
	Sequence<> sequence;
	IO<sequence.handle_input> io;
	Timer<8, io.print, sequence.is_complete> timer;

	Reset {
		io.setup();
		//async after 1 s timer.tick();
	}
}
